generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model book {
  id            String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title         String      @db.VarChar(255)
  description   String?     @db.VarChar(255)
  image         String?     @db.VarChar(255)
  book_owner_id String?     @db.Uuid
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  book_owner    book_owner? @relation(fields: [book_owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  interest      interest[]
}

model book_owner {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  user_id     String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  book        book[]
  user        user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model interest {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  seller_id  String?  @db.Uuid
  book_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  book       book?    @relation(fields: [book_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  seller     seller?  @relation(fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model seller {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?    @db.VarChar(255)
  image       String?    @db.VarChar(255)
  name        String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  user_id     String     @db.Uuid
  tenant_id   String     @db.VarChar(255)
  interest    interest[]
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  book_owner  book_owner[]
  seller      seller[]
}
